apply plugin: 'com.android.library'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

//        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions{
        abortOnError false
    }
}

dependencies {
    //    compile 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:+'
    //    compile fileTree(include: ['*.jar'], dir: 'libs')
    //    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
    //        exclude group: 'com.android.support', module: 'support-annotations'
    //    })
    compile 'com.android.support:appcompat-v7:23.0.0'
    //    testCompile 'junit:junit:4.12'
    //    compile files('libs/android-support-v13.jar')
    //    compile files('libs/FanweiPlugin_v4.4.jar')
    //    compile files('libs/open_sdk_r5788_lite.jar')
    //    compile files('libs/android-support-v13.jar')
    compile files('libs/FanweiPlugin_v4.4.jar')
    compile files('libs/open_sdk_r5788_lite.jar')
    compile files('libs/wechat-sdk-android-without-mta-1.1.7.jar')
    compile files('libs/org.apache.http.legacy.jar')
    compile files('libs/gson-2.3.1.jar')
}

task clearJar(type: Delete) {
    delete 'build/libs/mySdk.jar'////这行表示如果你已经打过一次包了，再进行打包则把原来的包删掉
}

task makeJar(type: Copy) {
    from('build/intermediates/bundles/debug/') //这行表示要打包的文件的路径，根据下面的内容，其实是该路径下的classes.jar
    into('build/libs/')  //这行表示打包完毕后包的生成路径，也就是生成的包存在哪
    include('classes.jar')  //看到这行，如果你对分包有了解的话，你就可以看出来这行它只是将一些类打包了
    rename ('classes.jar', 'mySdk.jar')
}

makeJar.dependsOn(clearJar, build)
